//Todaystasks activity.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <TextView
        android:id="@+id/tvHeader"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Today's Tasks"
        android:textSize="20sp"
        android:textStyle="bold"
        android:gravity="center"
        android:paddingBottom="16dp" />

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <TableLayout
            android:id="@+id/taskTable"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:stretchColumns="*"
            android:padding="8dp">
            <TableRow>
                <TextView android:text="Description" android:padding="8dp" android:textStyle="bold" />
                <TextView android:text="Time" android:padding="8dp" android:textStyle="bold" />
                <TextView android:text="Type" android:padding="8dp" android:textStyle="bold" />
                <TextView android:text="Notes" android:padding="8dp" android:textStyle="bold" />
            </TableRow>
        </TableLayout>
    </ScrollView>
</LinearLayout>

//Todaystasks activity.java
package com.example.voicenot;

import android.os.Bundle;
import android.widget.TableLayout;
import android.widget.TableRow;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.util.Calendar;
import java.util.HashMap;

public class Todaytasks extends AppCompatActivity {

    private TableLayout taskTable;
    private DatabaseReference databaseReference;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_todaytasks);

        taskTable = findViewById(R.id.taskTable);
        databaseReference = FirebaseDatabase.getInstance().getReference("tasks");

        fetchTasksForToday();
    }

    private void fetchTasksForToday() {
        Calendar calendar = Calendar.getInstance();
        String todayDate = String.format("%04d-%02d-%02d",
                calendar.get(Calendar.YEAR),
                calendar.get(Calendar.MONTH) + 1,
                calendar.get(Calendar.DAY_OF_MONTH));

        databaseReference.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot snapshot) {
                boolean isHeaderAdded = false; // Track if the date header is added
                for (DataSnapshot taskSnapshot : snapshot.getChildren()) {
                    HashMap<String, String> task = (HashMap<String, String>) taskSnapshot.getValue();
                    if (task != null && task.containsKey("date") && task.get("date").equals(todayDate)) {
                        if (!isHeaderAdded) {
                            addDateHeader(todayDate);
                            isHeaderAdded = true;
                        }
                        addTaskToTable(task.get("description"), task.get("time"), task.get("type"), task.getOrDefault("notes", "N/A"));
                    }
                }
            }

            @Override
            public void onCancelled(DatabaseError error) {
                // Handle error
            }
        });
    }

    private void addDateHeader(String date) {
        TableRow headerRow = new TableRow(this);
        TextView header = new TextView(this);
        header.setText("Tasks for " + date);
        header.setPadding(8, 8, 8, 8);
        header.setTextSize(18);
        headerRow.addView(header);
        taskTable.addView(headerRow);
    }

    private void addTaskToTable(String description, String time, String type, String notes) {
        TableRow row = new TableRow(this);
        row.addView(createTableCell(description));
        row.addView(createTableCell(time));
        row.addView(createTableCell(type));
        row.addView(createTableCell(notes));
        taskTable.addView(row);
    }

    private TextView createTableCell(String text) {
        TextView cell = new TextView(this);
        cell.setText(text);
        cell.setPadding(8, 8, 8, 8);
        return cell;
    }
}




//History of tasks activity.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <TextView
        android:id="@+id/tvHeader"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Task History"
        android:textSize="20sp"
        android:textStyle="bold"
        android:gravity="center"
        android:paddingBottom="16dp" />

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <TableLayout
            android:id="@+id/taskTable"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:stretchColumns="*"
            android:padding="8dp">
            <TableRow>
                <TextView android:text="Description" android:padding="8dp" android:textStyle="bold" />
                <TextView android:text="Time" android:padding="8dp" android:textStyle="bold" />
                <TextView android:text="Type" android:padding="8dp" android:textStyle="bold" />
                <TextView android:text="Notes" android:padding="8dp" android:textStyle="bold" />
            </TableRow>
        </TableLayout>
    </ScrollView>
</LinearLayout>


//History of tasks activity.java
package com.example.voicenot;

import android.os.Bundle;
import android.widget.TableLayout;
import android.widget.TableRow;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.util.HashMap;
import java.util.TreeMap;

public class Historyoftasks extends AppCompatActivity {

    private TableLayout taskTable;
    private DatabaseReference databaseReference;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_historyoftasks);

        taskTable = findViewById(R.id.taskTable);
        databaseReference = FirebaseDatabase.getInstance().getReference("tasks");

        fetchAllTasks();
    }

    private void fetchAllTasks() {
        databaseReference.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot snapshot) {
                TreeMap<String, DataSnapshot> tasksByDate = new TreeMap<>(); // TreeMap to sort tasks by date
                for (DataSnapshot taskSnapshot : snapshot.getChildren()) {
                    HashMap<String, String> task = (HashMap<String, String>) taskSnapshot.getValue();
                    if (task != null && task.containsKey("date")) {
                        tasksByDate.putIfAbsent(task.get("date"), taskSnapshot);
                    }
                }

                // Display tasks grouped by date
                for (String date : tasksByDate.keySet()) {
                    addDateHeader(date);
                    for (DataSnapshot taskSnapshot : snapshot.getChildren()) {
                        HashMap<String, String> task = (HashMap<String, String>) taskSnapshot.getValue();
                        if (task != null && task.get("date").equals(date)) {
                            addTaskToTable(task.get("description"), task.get("time"), task.get("type"), task.getOrDefault("notes", "N/A"));
                        }
                    }
                }
            }

            @Override
            public void onCancelled(DatabaseError error) {
                // Handle error
            }
        });
    }

    private void addDateHeader(String date) {
        TableRow headerRow = new TableRow(this);
        TextView header = new TextView(this);
        header.setText("Tasks for " + date);
        header.setPadding(8, 8, 8, 8);
        header.setTextSize(18);
        headerRow.addView(header);
        taskTable.addView(headerRow);
    }

    private void addTaskToTable(String description, String time, String type, String notes) {
        TableRow row = new TableRow(this);
        row.addView(createTableCell(description));
        row.addView(createTableCell(time));
        row.addView(createTableCell(type));
        row.addView(createTableCell(notes));
        taskTable.addView(row);
    }

    private TextView createTableCell(String text) {
        TextView cell = new TextView(this);
        cell.setText(text);
        cell.setPadding(8, 8, 8, 8);
        return cell;
    }
}

